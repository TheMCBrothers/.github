name: Publish
on:
  workflow_call:
    inputs:
      java_version:
        description: Java Version
        type: string
        required: false
        default: '17'
    secrets:
      CURSEFORGE_TOKEN:
        description: CurseForge Token
        required: false
      MODRINTH_TOKEN:
        description: Modrinth Token
        required: false
      PUBLISH_USER:
        description: Publish User
        required: false
      PUBLISH_PASSWORD:
        description: Publish Password
        required: false

jobs:
  build:
    name: "Build and Release"
    runs-on: self-hosted
    if: |
      !contains(github.event.head_commit.message, '[ci skip]')
      
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup JDK ${{ inputs.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java_version }}
          distribution: 'temurin'

      - name: Make Gradle Wrapper executable
        run: chmod +x ./gradlew

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew build --stacktrace

      - name: Release to Maven / CurseForge / Modrinth
        run: ./gradlew publish publishUnified --stacktrace
        if: |
          !contains(github.event.head_commit.message, '[norelease]') && github.event.inputs.norelease != 'true'
        env:
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          NEXUS_UNAME: ${{ secrets.PUBLISH_USER }}
          NEXUS_PWD: ${{ secrets.PUBLISH_PASSWORD }}
          PUBLISH_USER: ${{ secrets.PUBLISH_USER }}
          PUBLISH_PASSWORD: ${{ secrets.PUBLISH_PASSWORD }}

      - name: GitHub Release
        uses: ncipollo/release-action@v1
        if: |
          !contains(github.event.head_commit.message, '[norelease]') && github.event.inputs.norelease != 'true'
        continue-on-error: true
        with:
          allowUpdates: true
          generateReleaseNotes: true
          removeArtifacts: true
          replacesArtifacts: true
